package ch.ethz.fgremper.rtca;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.net.InetSocketAddress;
import java.util.Vector;
import java.util.concurrent.Executors;

import jlibdiff.Diff;
import jlibdiff.Diff3;
import jlibdiff.Hunk;
import jlibdiff.Hunk3;

import com.sun.net.httpserver.HttpServer;

public class ServerMain {

	static int port = 7330;

	public static void main(String[] args) throws Exception {
		

        List<String> original = fileToLines(ORIGINAL);
        List<String> revised  = fileToLines(RIVISED);

        // Compute diff. Get the Patch object. Patch is the container for computed deltas.
        Patch<String> patch = DiffUtils.diff(original, revised);

        for (Delta<String> delta: patch.getDeltas()) {
            System.out.println(delta);
        }
        
		
		/*
		// Periodically origin updater
		System.out.println("[Main] Starting periodical origin updater");
		
		PeriodicalAllOriginUpdater originUpdaterInterval = new PeriodicalAllOriginUpdater();
		new Thread(originUpdaterInterval).start();
		
		*/
		
		// HTTP server
		/*
		int port = ServerConfig.getInstance().serverPort;
		
		System.out.println("[Main] Starting HTTP server on port " + port + "...");

		HttpServer server = HttpServer.create(new InetSocketAddress(port), 0);
		server.createContext("/webinterface", new WebInterfaceHttpHandler());
		server.createContext("/request", new RequestHttpHandler());
		server.setExecutor(Executors.newCachedThreadPool());
		server.start();

		System.out.println("[Main] Server up!");
		*/
	}

}
