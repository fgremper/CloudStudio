package ch.ethz.fgremper.test.combination;

import static org.junit.Assert.*;

import org.json.JSONArray;
import org.json.JSONObject;
import org.junit.Test;

import ch.ethz.fgremper.rtca.DatabaseConnection;
import ch.ethz.fgremper.rtca.test.helper.TestGitHelper;

public class FileLevelAwarenessTest {

	public JSONObject findItem(JSONArray array, String key, String value) throws Exception {
		for (int i = 0; i < array.length(); i++) {
			if (array.getJSONObject(i).getString(key).equals(value)) return array.getJSONObject(i);
		}
		return null;
	}

	
	@Test
	public void test() throws Exception {


		// Database connection
		DatabaseConnection db = new DatabaseConnection();
		db.getConnection();

		// Objects
		JSONObject responseObject;
		JSONArray filesArray;
		JSONObject fileObject;
		
		// Setup default state
		TestGitHelper.setupTest();
		TestGitHelper.runPlugins();
		
		// Test default state
		responseObject = db.getFileLevelAwareness("TestRepository", "John", "master", "master", false, false);

		System.out.println(responseObject.toString());
filesArray = responseObject.getJSONArray("files");
		assertEquals(3, filesArray.length());
		assertEquals("NO_CONFLICT", findItem(filesArray, "username", "John").getString("type"));
		assertEquals("NO_CONFLICT", findItem(filesArray, "username", "David").getString("type"));
		assertEquals("NO_CONFLICT", findItem(filesArray, "username", "Isabelle").getString("type"));

		// Uncomitted
		responseObject = db.getFileLevelAwareness("TestRepository", "John", "master", "master", true, false);
		filesArray = responseObject.getJSONArray("files");
		assertEquals(3, filesArray.length());
		assertEquals("NO_CONFLICT", findItem(filesArray, "username", "John").getString("type"));
		assertEquals("NO_CONFLICT", findItem(filesArray, "username", "David").getString("type"));
		assertEquals("NO_CONFLICT", findItem(filesArray, "username", "Isabelle").getString("type"));

				
		db.closeConnection();

	}

}
