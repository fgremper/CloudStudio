package ch.ethz.fgremper.rtca;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Arrays;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import org.apache.commons.configuration.XMLConfiguration;
import org.apache.commons.io.IOUtils;
import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.internal.storage.file.FileRepository;
import org.eclipse.jgit.lib.Constants;
import org.eclipse.jgit.lib.ObjectId;
import org.eclipse.jgit.lib.ObjectLoader;
import org.eclipse.jgit.lib.Ref;
import org.eclipse.jgit.lib.Repository;
import org.eclipse.jgit.revwalk.RevCommit;
import org.eclipse.jgit.revwalk.RevTree;
import org.eclipse.jgit.revwalk.RevWalk;
import org.eclipse.jgit.storage.file.FileRepositoryBuilder;
import org.eclipse.jgit.treewalk.TreeWalk;
import org.eclipse.jgit.treewalk.filter.PathFilter;
import org.json.JSONArray;
import org.json.JSONObject;

public class ClientMain {

	public static void main(String[] args) throws Exception {

		ClientConfig config = new ClientConfigReader("config.xml").getConfig();

		HttpClient httpClient = new HttpClient();

		String sessionId = httpClient.login(config.serverUrl, config.username, config.password);
		
		for (RepositoryInfo repositoryInfo : config.repositoriesList) {	
			
			RepositoryReader repositoryReader = new RepositoryReader(repositoryInfo.localPath);
			
			repositoryReader.put("username", config.username);
			repositoryReader.put("sessionId", sessionId);
			repositoryReader.put("repositoryAlias", repositoryInfo.alias);
			
			String jsonString = repositoryReader.getJsonString();
			
			httpClient.sendGitState(config.serverUrl, repositoryInfo.alias, config.username, sessionId, jsonString);
			
		}
		
	}

}
