package ch.ethz.fgremper.test.combination;

import static org.junit.Assert.*;
import junit.framework.Assert;

import org.json.JSONObject;
import org.junit.Test;

import ch.ethz.fgremper.rtca.DatabaseConnection;
import ch.ethz.fgremper.rtca.test.helper.TestGitHelper;

public class BranchLevelAwarenessTest {

	@Test
	public void test() throws Exception {
		

		DatabaseConnection db = new DatabaseConnection();
		
		db.getConnection();

		JSONObject responseObject;
		JSONArray branchesArray;
		JSONObject branchObject;
		
		// Setup everything
		TestGitHelper.setupTest();
		TestGitHelper.runPlugins();
		
		// Default state
		System.out.println("DEFAULT");
		responseObject = db.getBranchLevelAwareness("TestRepository");
		assertEquals(1, responseObject.length());
		
		System.out.println(responseObject.toString());
		
		TestGitHelper.createOrModifyFile("John", "default.txt");
		TestGitHelper.commit("John");
		TestGitHelper.push("John");
		TestGitHelper.runPlugins();
		
		// John 1 ahead
		System.out.println("JOHN 1 AHEAD");
		System.out.println(db.getBranchLevelAwareness("TestRepository").toString());
		
		TestGitHelper.createOrModifyFile("John", "default.txt");
		TestGitHelper.commit("John");
		TestGitHelper.push("John");
		TestGitHelper.runPlugins();
		
		// John 2 ahead
		System.out.println("JOHN 2 AHEAD");
		System.out.println(db.getBranchLevelAwareness("TestRepository").toString());
		
		

		TestGitHelper.createOrModifyFile("Isabelle", "default.txt");
		TestGitHelper.commit("Isabelle");
		TestGitHelper.push("Isabelle");
		TestGitHelper.runPlugins();
		
		// Isabelle 1 ahead
		System.out.println("JOHN 2 AHEAD");
		System.out.println(db.getBranchLevelAwareness("TestRepository").toString());
		
		
		
		
				
	}

}
