package ch.fgremper.rtca;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URI;
import java.util.Scanner;

import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.IOUtils;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.sun.net.httpserver.*;

public class RtcaHttpHandler implements HttpHandler {
   public void handle(HttpExchange exchange) throws IOException {
       URI uri = exchange.getRequestURI();
       String requestMethod = exchange.getRequestMethod();
       System.out.println("Incoming request: " + requestMethod + " " + uri.getPath());
       
       String username = "testuser";
       String repositoryAlias = "testrepo";
       
       if (requestMethod.equalsIgnoreCase("PUT")) {
    	   System.out.println("Incoming PUT:");
    	   
    	   String jsonString = IOUtils.toString(exchange.getRequestBody(), "UTF-8");
    	   System.out.println("JSON string: " + jsonString);

    	   try {
    		   JSONArray fileArray = new JSONArray(jsonString);

			   // TODO: use a pool of database connections
			   
    		   DatabaseConnection db = new DatabaseConnection();
    		   db.startTransaction();
    		   db.deleteAllFilesFromRepositoryAndUser(String repositoryAlias, String username);
    		   
    		   for (int i = 0; i < fileArray.length(); i++) {
    			   JSONObject fileObject = fileArray.getJSONObject(i);
    			   
    			   String filename = fileObject.getString("filename");
    			   String content = fileObject.getString("content");
    			   String sha = DigestUtils.sha1Hex(content).toString();
    			   
    			   System.out.println("Filename: " + filename);
    			   System.out.println("Content: " + content);
    			   System.out.println("SHA: " + sha);
    			   
    			   FileUtils.writeStringToFile(new File("C:/GDev/newmtworkspace/mtcode/filestorage/" + sha), content);

    			   db.storeFile(repositoryAlias, username, filename, sha);
    		   }
    		   
    		   db.commitTransaction();
    	   } catch (Exception e) {
    		   // TODO Auto-generated catch block
    		   System.err.println("Error while handling PUT request.");
    		   e.printStackTrace();
    	   }
    	   
       }
       
       // TODO: send a good response!
       String response = "Path: " + uri.getPath() + "\n";
       exchange.sendResponseHeaders(400, response.length());
       OutputStream os = exchange.getResponseBody();
       os.write(response.getBytes());
       os.close();
   }
}
